
#include <iostream>
#include<locale.h>
using namespace std;
struct node {
    int data;
    struct node *next;
};

 struct node *basaEkle(struct node *head , int key)
{system("cls");
    if(head==NULL){
        struct node *temp=new node();
        temp->data=key;
        temp->next=NULL;
        head=temp;
    }
    else{
        struct node *temp=new node();
        temp->data=key;
        temp->next=head;
        head=temp;
        }
    return head;
};



struct node *SonaEkle(struct node *head , int key)
{
system("cls");

    if(head==NULL){
        struct node *temp=new node();
        temp->data=key;
        temp->next=NULL;
        head=temp;
    }
    else
        {
        struct node *temp=new node();
        temp->data=key;
        temp->next=NULL;

            struct node *temp2=head;
            while(temp2->next!=NULL)
           {

            temp2=temp2->next;
           }
            temp2->next=temp;
            cout<<"listenin sonuna eleman eklendi"<<endl;

        }
    return head;
};
    void verileriYazdir(struct node *head){
        system("cls");
        if(head==NULL){
            cout<<"liste bos"<<endl;
            }
        else{
        struct node *temp=head;
        while (temp!=NULL){
            cout<<temp->data<<" ";
            temp=temp->next;
        }
        }
        }

    void tumBilgileriYazdir(struct node *head){


        system("cls");
            if(head==NULL)
            cout<<"liste bos"<<endl;
        else{
            struct node *temp=head;
            int i=1;
            while(temp!=NULL)
            {

                cout<<i<<".dugumun data: "<<temp->data<<" adresi: "<<temp <<" bir sonraki dugumun adresi: "<<temp->next<<endl;
                temp=temp->next;
                    i++;
                }

        }
        }



        int dugumAdeti( struct node *head){
            int adet=0;
            if(head==NULL)
            {
                cout<<"liste bos"<<endl;
                return 0;
            }
            else{
                struct node *temp=head;
                while(temp!=NULL){
                    adet++;
                    temp=temp->next;

                }
                return adet;
                    }
                    };



            int verileriTopla(struct node *head){


            int toplam=0;
            if(head==NULL){
                cout<<"liste bos"<<endl;
                return 0;
            }
            else{
                struct node *temp=head;
                while(temp!=NULL){
                    toplam+=temp->data;
                    temp=temp->next;
                }
                return toplam;
            }
        }

        void veriAra(struct node *head, int arananSayi){
            bool sonuc=false;
            if(head==NULL)
                cout<<"liste bos"<<endl;

            else{

                int index=0;
                struct node *temp=head;
                while(temp!=NULL){
                    index++;
                    if(temp->data==arananSayi)
                    {
                    sonuc=true;

                    break;
                    }
                    temp=temp->next;
            }

                if(!sonuc)
                    cout<<arananSayi<<"-->listede vardir"<<index;
                else
                    cout<<"-->aranan sayi listede yoktur"<<endl;
         }
        }

    struct node *bastanSil(struct node *head){
        if(head==NULL){cout<<"liste bostur"<<endl;}
        else{
            if(head->next==NULL){
                    delete head;
                    head=NULL;
                                }
             else{
                struct node *temp=head->next; // bastakini silip sonraki basa geccegi için next yaptım
                delete head; // bastaki elemanı sildim
                head=temp; // temp neydi baştakinin sonrakiydi şimdi o başa geçmiş oldu
             }

            }
            return head;


    };
    struct node *sondanSil(struct node *head)
    {
    if(head==NULL)
    {
        cout<<"liste bos"<<endl;
    }

    else{
        if(head->next==NULL)
        {
            delete head;
            head=NULL;
        }
        else
            { struct node *temp=head;
        while (temp->next->next!=NULL)
            temp=temp->next;

        struct node *temp2=temp;
        delete temp2->next;
        temp2->next=NULL;


            }

    }
    return head;
    };







int main()
{
    setlocale(LC_ALL , "");
    struct node *head=NULL;
    int sayi,secim,n;
    while(1){
    cout<<endl;
    cout<<"tek yonlu dogrusal bagli liste uygulamasý " << endl;
    cout<<"1-- basa eleman ekle " << endl;
    cout<<"2-- sona eleman ekle " << endl;
    cout<<"3-- verileri yazdir " << endl;
    cout<<"4-- listedeki tüm bilgileri yazdir " << endl;
    cout<<"5-- listedeki dugum sayisini yazdir" <<endl;
    cout<<"6-- Ekrani Temizle " << endl;
    cout<<"7-- Çıkıs yap"<<endl;
    cout<<"8--Verileri Topla"<<endl;
    cout<<"9--Aranan Sayi"<<endl;
    cout<<"10--Bastan eleman sil"<<endl;
    cout<<"11-Sondan eleman sil"<<endl;
    cin>>secim;

    switch(secim){
        case 1: cout<<" basa eklenecek sayi: "<<endl;
        cin>>sayi;
        head=basaEkle(head,sayi);
        break;


        case 2: cout<<" sona eklenecek sayi: " <<endl;
        cin>>sayi;
        head=SonaEkle(head,sayi);
        break;


        case 3: verileriYazdir(head);
        break;

        case 4: tumBilgileriYazdir(head);
        break;

        case 5: n=dugumAdeti(head);
                cout<<"listedeki dugum adeti: " << n <<endl;
        break;

        case 6: cout<< "ekran temizlendi."<< system("cls");
        break;

        case 7: cout<<" cikis yapildi " <<endl;
        return 0;

        case 8: n=verileriTopla(head);
        cout<<"Verilerin Toplamý: "<<n<<endl;
        break;

        case 9: cout<<"aranan sayiyi giriniz"<<endl;
            cin>>sayi;
            veriAra(head,sayi);
            break;

        case 10: head=bastanSil(head);
         verileriYazdir(head);
        break;

        case 11: head=sondanSil(head);
        break;



        default: cout<<"hatali secim yaptiniz"<<endl;
    }
    }
    return 0;
}

